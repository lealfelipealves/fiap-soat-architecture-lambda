name: Deploy Infra e Lambda

on:
  push:
    branches: [main]

env:
  PREFIX: ${{ vars.PREFIX }}
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        
    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v3

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📦 Instalar dependências
        working-directory: ./app
        run: npm ci
        
      - name: 🔧 Build com tsup
        working-directory: ./app
        run: npm run build

      - name: 🗜️ Zip da Lambda
        working-directory: ./app
        run: |
          mv dist/index.cjs dist/index.js 
          mv dist/create.cjs dist/create.js 
          cd dist
          zip -r ../../lambda.zip .

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: 🔐 Configure credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }} 

      - name: 🌱 Terraform Init
        working-directory: ./infra
        run: |
          terraform init \
          -input=false \
          -backend-config="bucket=${{ secrets.BACKEND_BUCKET }}" \
          -backend-config="key=terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"

      - name: 🔎 Terraform Plan
        working-directory: ./infra
        run: terraform plan -var="prefix=${{ env.PREFIX }}"

      - name: 🚀 Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve -var="prefix=${{ env.PREFIX }}"